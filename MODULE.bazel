module(
    name = "monorepo",
    repo_name = "com_github_jrockway_monorepo",
)

bazel_dep(name = "aspect_bazel_lib", version = "2.9.4")
bazel_dep(name = "aspect_rules_esbuild", version = "0.21.0")
bazel_dep(name = "aspect_rules_js", version = "2.1.1")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "gazelle", version = "0.40.0")
bazel_dep(name = "hermetic_cc_toolchain", version = "3.1.1")
bazel_dep(name = "platforms", version = "0.0.10")
bazel_dep(name = "rules_go", version = "0.50.1")
bazel_dep(name = "rules_nodejs", version = "6.3.2")
bazel_dep(name = "rules_oci", version = "2.0.1")

bazel_dep(name = "buildifier_prebuilt", version = "7.3.1", dev_dependency = True)

# go
go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")
go_sdk.nogo(nogo = "//:nogo")
go_sdk.download(
    name = "go_sdk",
    version = "1.23.3",
)
use_repo(go_sdk, "go_sdk")

go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
go_deps.gazelle_override(
    build_file_generation = "clean",
    path = "github.com/cncf/xds/go",
)
go_deps.gazelle_override(
    build_file_generation = "clean",
    directives = [
        "gazelle:proto disable_global",
    ],
    path = "cel.dev/expr",
)
go_deps.gazelle_override(
    build_file_generation = "clean",
    directives = [
        "gazelle:proto disable_global",
    ],
    path = "github.com/envoyproxy/protoc-gen-validate",
)
use_repo(
    go_deps,
    "co_honnef_go_tools",
    "com_github_adrg_xdg",
    "com_github_alingse_asasalint",
    "com_github_breml_bidichk",
    "com_github_envoyproxy_go_control_plane",
    "com_github_fatih_color",
    "com_github_felixge_httpsnoop",
    "com_github_go_logr_zapr",
    "com_github_go_test_deep",
    "com_github_golang_protobuf",
    "com_github_golangci_go_printf_func_name",
    "com_github_golangci_gofmt",
    "com_github_google_go_cmp",
    "com_github_gordonklaus_ineffassign",
    "com_github_grpc_ecosystem_go_grpc_middleware",
    "com_github_grpc_ecosystem_go_grpc_prometheus",
    "com_github_grpc_ecosystem_grpc_opentracing",
    "com_github_itchyny_gojq",
    "com_github_jackc_pgx_v4",
    "com_github_jessevdk_go_flags",
    "com_github_joonix_log",
    "com_github_kisielk_errcheck",
    "com_github_klauspost_compress",
    "com_github_logrusorgru_aurora_v3",
    "com_github_mattn_go_colorable",
    "com_github_mattn_go_isatty",
    "com_github_miekg_dns",
    "com_github_nishanths_exhaustive",
    "com_github_openpeedeep_depguard_v2",
    "com_github_opentracing_contrib_go_stdlib",
    "com_github_opentracing_opentracing_go",
    "com_github_pkg_errors",
    "com_github_povilasv_prommod",
    "com_github_prometheus_client_golang",
    "com_github_satori_go_uuid",
    "com_github_sirupsen_logrus",
    "com_github_tdakkota_asciicheck",
    "com_github_tomarrell_wrapcheck_v2",
    "com_github_uber_jaeger_client_go",
    "com_github_uber_jaeger_lib",
    "io_k8s_api",
    "io_k8s_apimachinery",
    "io_k8s_client_go",
    "io_k8s_klog",
    "io_k8s_klog_v2",
    "io_k8s_sigs_kind",
    "io_k8s_sigs_yaml",
    "org_cloudfoundry_code_lager",
    "org_golang_google_genproto_googleapis_rpc",
    "org_golang_google_grpc",
    "org_golang_google_protobuf",
    "org_golang_x_exp",
    "org_golang_x_net",
    "org_golang_x_tools",
    "org_uber_go_atomic",
    "org_uber_go_automaxprocs",
    "org_uber_go_zap",
)

# javascript
node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node", dev_dependency = True)
node.toolchain(
    name = "nodejs",
    node_version_from_nvmrc = "//:.nvmrc",
)
use_repo(node, "nodejs")

pnpm = use_extension("@aspect_rules_js//npm:extensions.bzl", "pnpm", dev_dependency = True)
use_repo(pnpm, "pnpm")

npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm", dev_dependency = True)
npm.npm_translate_lock(
    name = "npm",
    npmrc = "//:.npmrc",
    pnpm_lock = "//:pnpm-lock.yaml",
    verify_node_modules_ignored = "//:.bazelignore",
)
use_repo(npm, "npm")

# oci
oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")
oci.pull(
    name = "nginx",
    digest = "sha256:0c86dddac19f2ce4fd716ac58c0fd87bf69bfd4edabfd6971fb885bafd12a00b",
    image = "docker.io/library/nginx",
    platforms = [
        "linux/amd64",
        "linux/arm64/v8",
    ],
    tag = "1.27.3",
)
use_repo(oci, "nginx", "nginx_linux_amd64", "nginx_linux_arm64_v8")

# hugo
hugo = use_extension("//tools/hugo:extensions.bzl", "hugo")
use_repo(hugo, "hugo_amd64_linux", "hugo_arm64_linux", "hugo_macos")

# cc toolchain
toolchains = use_extension("@hermetic_cc_toolchain//toolchain:ext.bzl", "toolchains")
use_repo(toolchains, "zig_sdk")

register_toolchains(
    "@zig_sdk//toolchain:linux_amd64_gnu.2.33",
    "@zig_sdk//toolchain:linux_arm64_gnu.2.33",
    "@zig_sdk//toolchain:windows_amd64",
    "@zig_sdk//toolchain:x86_64-macos-none",
    "@zig_sdk//toolchain:aarch64-macos-none",
)
