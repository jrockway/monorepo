load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "client",
    srcs = ["client.go"],
    importpath = "github.com/jrockway/monorepo/opinionated-server/client",
    visibility = ["//visibility:public"],
    deps = [
        "//opinionated-server/internal/formatters",
        "@com_github_grpc_ecosystem_go_grpc_middleware//logging",
        "@com_github_grpc_ecosystem_go_grpc_middleware//logging/zap",
        "@com_github_grpc_ecosystem_go_grpc_middleware//logging/zap/ctxzap",
        "@com_github_grpc_ecosystem_go_grpc_prometheus//:go-grpc-prometheus",
        "@com_github_grpc_ecosystem_grpc_opentracing//go/otgrpc",
        "@com_github_opentracing_contrib_go_stdlib//nethttp",
        "@com_github_opentracing_opentracing_go//:opentracing-go",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_prometheus_client_golang//prometheus/promauto",
        "@com_github_uber_jaeger_client_go//:jaeger-client-go",
        "@com_github_uber_jaeger_client_go//log/zap",
        "@org_golang_google_grpc//:grpc",
        "@org_uber_go_zap//:zap",
    ],
)

go_test(
    name = "client_test",
    srcs = [
        "client_fuzz_test.go",
        "client_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":client"],
    deps = [
        "//opinionated-server/client/internal/fuzzsupport",
        "@com_github_opentracing_opentracing_go//:opentracing-go",
        "@com_github_uber_jaeger_client_go//config",
        "@com_github_uber_jaeger_client_go//log/zap",
        "@com_github_uber_jaeger_client_go//zipkin",
        "@org_uber_go_zap//zapcore",
        "@org_uber_go_zap//zaptest",
    ],
)
