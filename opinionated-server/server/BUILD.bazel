load("@rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "server",
    srcs = [
        "rpclog.go",
        "server.go",
    ],
    importpath = "github.com/jrockway/monorepo/opinionated-server/server",
    visibility = ["//visibility:public"],
    deps = [
        "//opinionated-server/client",
        "//opinionated-server/internal/formatters",
        "@com_github_felixge_httpsnoop//:httpsnoop",
        "@com_github_golang_protobuf//proto",
        "@com_github_grpc_ecosystem_go_grpc_middleware//logging/zap",
        "@com_github_grpc_ecosystem_go_grpc_middleware//logging/zap/ctxzap",
        "@com_github_grpc_ecosystem_go_grpc_prometheus//:go-grpc-prometheus",
        "@com_github_grpc_ecosystem_grpc_opentracing//go/otgrpc",
        "@com_github_jessevdk_go_flags//:go-flags",
        "@com_github_opentracing_contrib_go_stdlib//nethttp",
        "@com_github_opentracing_opentracing_go//:opentracing-go",
        "@com_github_povilasv_prommod//:prommod",
        "@com_github_prometheus_client_golang//prometheus",
        "@com_github_prometheus_client_golang//prometheus/promauto",
        "@com_github_prometheus_client_golang//prometheus/promhttp",
        "@com_github_uber_jaeger_client_go//config",
        "@com_github_uber_jaeger_client_go//log/zap",
        "@com_github_uber_jaeger_client_go//zipkin",
        "@com_github_uber_jaeger_lib//metrics/prometheus",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_grpc//channelz/service",
        "@org_golang_google_grpc//health",
        "@org_golang_google_grpc//health/grpc_health_v1",
        "@org_golang_google_grpc//metadata",
        "@org_golang_google_grpc//reflection",
        "@org_golang_google_grpc//status",
        "@org_golang_google_protobuf//encoding/protojson",
        "@org_golang_google_protobuf//proto",
        "@org_golang_x_net//http2",
        "@org_golang_x_net//http2/h2c",
        "@org_uber_go_automaxprocs//maxprocs",
        "@org_uber_go_zap//:zap",
        "@org_uber_go_zap//zapcore",
    ],
)

go_test(
    name = "server_test",
    srcs = [
        "rpclog_test.go",
        "server_test.go",
    ],
    embed = [":server"],
    deps = [
        "//opinionated-server/client",
        "@org_golang_google_grpc//:grpc",
        "@org_golang_google_grpc//health/grpc_health_v1",
        "@org_golang_google_grpc//metadata",
        "@org_uber_go_zap//:zap",
        "@org_uber_go_zap//zapcore",
        "@org_uber_go_zap//zaptest/observer",
    ],
)
